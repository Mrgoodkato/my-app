<WORKING ON THIS>
    1) Finish the logic for change of view horizontally and vertically using the keys:

        The idea is basically to make the camera turn left, right, top, bottom if we surpass the limits. Displaying one of the images for the navigation.

        This can be done making the movementLimiter() in the movement.js file throw more information after it hits a limit.

        <PROGRESS AND IDEA> -------------- IMPORTANT!
        Instead of moving in 6 directions like a cube that is only looked at in an upfront position with no tilt, why dont we add a tilt to each direction?

        So, basically this exponentially complicates the simple left, right, up, down navigation, adding the tilt element to the camera.

        So the movements could be as follows (STATIC WITHOUT COUNTING FRONT AND BACKWARDS MOVES):
            
            1) Pan right
            2) Pan left
            3) Pan up
            4) Pan down
            5) Tilt right
            6) Tilt left

        Taking into account these possible movements (we can make the tilt movements go with shift-a, shift-d), our initial mapping of a single frame will be as follows:

            A single frame will contain the following images, saying "Direction" is either, Front, Left, Right, Back, Top, Bottom:
                
                [Direction, DirectionTLeft, DirectionTRigth, DirectionTDown] * 6 (Frame directions) = 24 individual frames of possible view of a single navigation position.
        
        Using the previous logic we need to define the following hierarchy:
        1) LEVEL = The full map of the level, composed of different <FRAMES>
        2) FRAME = Each part of the map, that is a 360 degree series of images to pan and tilt to explore, composed by <RENDERS>
        2) RENDER = Each image in the viewer that the player will interact with and pan, tilt the camera in order to move to another <RENDER>

        Created the Camera Mapping JS file with a constant called FRAME with all possible render directions and tilts, and the movements providing the direction each pan will send the render to.

        Took a little physical contortion working on how the box would move with each direction change, and what would be the result.

        But I did it :)


    <NOT WORKED ON THIS YET>
    2) Work on how we will move forward or backwards in the <FRAME>.

        A possible solution is to use another key, such as a combination of <<shift w>>, <<shift d>> to go forwards, backwards.


This was the work today. We are doing well, let's keep it going!
I know we can do it.

Right Zach?